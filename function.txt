template<typename TYPE_KEY, typename TYPE_VAL> class BPlusTree // 调用bpt的时候要BPlusTree<type, type> xxx

typedef std :: pair<TYPE_KEY, TYPE_VAL> TYPE; // 下面的TYPE都是一个pair

void Clean() // Clean
void Insert(TYPE key, int x = 0, int fa = -1, int fpos = -1) // 插入一个pair<TYPE_KEY, TYPE_VAL>
void Delete(TYPE key, int x = 0, int fa = -1, int fpos = -1) // 删除一个pair<TYPE_KEY, TYPE_VAL>
bool Exist(TYPE key, int x = 0) // 查询pair<TYPE_KEY, TYPE_VAL>存不存在
bool Exist(TYPE_KEY key, int x = 0) // 查询key存不存在
void Find(TYPE_KEY key, std :: vector<TYPE_VAL> &vec, int x = 0) // 找到树中key值等于这个的所有val，存在vector里
void Find(TYPE_KEY low, TYPE_KEY high, std :: vector<TYPE_VAL> &vec, int x = 0) // 找到树中key值在区间[low, high]之间所有的val，存在vector里



3.2 585 modify_profile -c Rangers -u NoirCorne -p a0CakQ4NJgSBlmvPK8P -g 1
3.2 1021 modify_profile -c Elysium -u NoirCorne -p bNQo!KQsdQrQ


4.2 194 buy_ticket -u Skyfire -i LeavesofGrass -d 07-11 -n 3062 -f 浙江省上虞市 -t 河北省霸州市 -q true
4.5 2003 refund_ticket -u Skyfire -n 34


